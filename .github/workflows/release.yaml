name: ðŸ“¦ Build & Release (HACS-ready)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build_and_release:
    name: ðŸš€ Build ZIP and publish GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4

      - name: ðŸ§° Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: ðŸ”Ž Read & validate version (tag vs manifest.json)
        id: ver
        shell: bash
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT

          MANIFEST_VERSION=$(python - <<'PY'
import json
with open('custom_components/elkbledom/manifest.json', 'r', encoding='utf-8') as f:
    print(json.load(f)['version'])
PY
)
          echo "manifest_version=${MANIFEST_VERSION}" >> $GITHUB_OUTPUT

          if [ "$TAG_VERSION" != "$MANIFEST_VERSION" ]; then
            echo "::error::Tag version (v$TAG_VERSION) != manifest.json version ($MANIFEST_VERSION)"
            exit 1
          fi
          echo "âœ… Version check passed: v$TAG_VERSION"

      - name: ðŸ§© Quick hassfest validation
        uses: home-assistant/actions/hassfest@main

      - name: ðŸ§ª Optional HACS validation
        uses: hacs/action@main
        with:
          category: "integration"
        continue-on-error: true

      - name: ðŸ“¦ Build ZIP asset
        shell: bash
        run: |
          ASSET="elkbledom-fastlink-v${{ steps.ver.outputs.tag_version }}.zip"
          echo "ASSET_NAME=$ASSET" >> $GITHUB_ENV
          test -d custom_components/elkbledom || (echo "::error::custom_components/elkbledom not found" && exit 1)
          cd custom_components
          zip -r "../$ASSET" "elkbledom" \
            -x "**/__pycache__/*" "**/*.pyc" "**/*.pyo" "**/.DS_Store" ".*/**"
          cd ..
          ls -lh "$ASSET"
          echo "âœ… Built $ASSET"

      - name: ðŸ“° Generate release notes (auto)
        id: notes
        run: |
          echo "release_name=ELK-BLEDOM FastLink v${{ steps.ver.outputs.tag_version }}" >> $GITHUB_OUTPUT
          echo "release_body=Fast, stable BLE integration for Home Assistant with working effects, smooth brightness and RGB color temperature emulation." >> $GITHUB_OUTPUT

      - name: ðŸš€ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.notes.outputs.release_name }}
          body: ${{ steps.notes.outputs.release_body }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ env.ASSET_NAME }}
