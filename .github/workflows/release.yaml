name: Build ZIP and Create Release (auto version + HACS)

on:
  workflow_dispatch:

jobs:
  build-and-release:
    name: Auto Version + HACS Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt || true

      # Получаем текущую версию из manifest.json
      - name: Get current version
        id: get_version
        run: |
          CURRENT=$(grep '"version"' custom_components/elkbledom_fastlink/manifest.json | cut -d '"' -f4)
          echo "current=$CURRENT" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT"

      # Увеличиваем patch (x.y.z → x.y.(z+1))
      - name: Bump version
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ steps.get_version.outputs.current }}"
          PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "🔼 New version: $NEW_VERSION"

      # Обновляем manifest.json
      - name: Update manifest.json
        run: |
          sed -i 's/"version": ".*"/"version": "${{ steps.bump_version.outputs.new_version }}"/' custom_components/elkbledom_fastlink/manifest.json
          echo "✅ Updated manifest.json to version ${{ steps.bump_version.outputs.new_version }}"

      # Создаём или обновляем .hacs.json
      - name: Update .hacs.json
        run: |
          cat > .hacs.json <<EOF
          {
            "name": "ELK-BLEDOM FastLink",
            "content_in_root": false,
            "filename": "elkbledom_fastlink.zip",
            "render_readme": true,
            "zip_release": true,
            "homeassistant": "2023.0.0",
            "version": "${{ steps.bump_version.outputs.new_version }}",
            "resources": [],
            "iot_class": "local_push"
          }
          EOF
          echo "✅ Updated .hacs.json for HACS compatibility"

      # Создаём архив для релиза
      - name: Prepare release ZIP
        run: |
          mkdir -p elkbledom_fastlink
          cp -r custom_components/elkbledom_fastlink elkbledom_fastlink/custom_components
          zip -r elkbledom_fastlink.zip elkbledom_fastlink
          echo "✅ ZIP file created: elkbledom_fastlink.zip"

      # Коммитим обновления
      - name: Commit and push updates
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add custom_components/elkbledom_fastlink/manifest.json .hacs.json
          git commit -m "🔖 Bump version to ${{ steps.bump_version.outputs.new_version }} and update HACS metadata"
          git push

      # Создаём релиз и тег
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: "ELK-BLEDOM FastLink v${{ steps.bump_version.outputs.new_version }}"
          body: |
            🚀 **Release ELK-BLEDOM FastLink v${{ steps.bump_version.outputs.new_version }}**
            
            🔧 **Changes:**
            • Improved brightness control  
            • Optimized color and warm tone  
            • Restored effect animations  
            • Enhanced Bluetooth stability  
            
            ---
            🧩 Home Assistant custom integration for ELK-BLEDOM RGB controllers  
            💾 Fully compatible with HACS  
            🔗 https://github.com/Satimaro/elkbledom-fastlink
          files: |
            elkbledom_fastlink.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
