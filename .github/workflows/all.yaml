name: ðŸš€ Validate, Build & Release (Full Auto)

on:
  push:
    branches: [ main, master ]
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  # =============================
  # ðŸ§© VALIDATION JOB
  # =============================
  validate:
    name: ðŸ§  Validate Integration
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ§© Hassfest Validation
        uses: home-assistant/actions/hassfest@main

      - name: ðŸ§ª HACS Validation
        uses: hacs/action@main
        with:
          category: "integration"

  # =============================
  # ðŸ“¦ BUILD & RELEASE JOB
  # =============================
  release:
    name: ðŸ“¦ Auto Build ZIP & Create Release
    needs: [validate]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ§° Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: ðŸ§¾ Sync manifest.json version with tag
        id: sync
        shell: bash
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT
          MANIFEST="custom_components/elkbledom/manifest.json"
          echo "ðŸ”§ Updating $MANIFEST to version $TAG_VERSION..."
          python - <<PY
import json
path = "$MANIFEST"
with open(path, "r", encoding="utf-8") as f:
    data = json.load(f)
data["version"] = "${TAG_VERSION}"
with open(path, "w", encoding="utf-8") as f:
    json.dump(data, f, indent=2, ensure_ascii=False)
PY
          echo "âœ… manifest.json version updated to $TAG_VERSION"

      - name: ðŸ§© Re-run Hassfest Validation
        uses: home-assistant/actions/hassfest@main

      - name: ðŸ§ª Re-run HACS Validation
        uses: hacs/action@main
        with:
          category: "integration"
        continue-on-error: true

      - name: ðŸ“¦ Build ZIP for HACS
        shell: bash
        run: |
          ZIP="elkbledom-fastlink-v${{ steps.sync.outputs.tag_version }}.zip"
          echo "ZIP_NAME=$ZIP" >> $GITHUB_ENV
          cd custom_components
          zip -r "../$ZIP" "elkbledom" -x "**/__pycache__/*" "**/.DS_Store"
          cd ..
          ls -lh "$ZIP"
          echo "âœ… Created $ZIP"

      - name: ðŸ“° Generate Release Notes
        id: notes
        run: |
          echo "release_name=ELK-BLEDOM FastLink v${{ steps.sync.outputs.tag_version }}" >> $GITHUB_OUTPUT
          echo "release_body=âœ¨ Fast BLE connection, working effects, improved brightness curve, and stable real-time sync with Home Assistant." >> $GITHUB_OUTPUT

      - name: ðŸš€ Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.notes.outputs.release_name }}
          body: ${{ steps.notes.outputs.release_body }}
          files: ${{ env.ZIP_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: ðŸ’¾ Commit updated manifest.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸ”– Update manifest.json to v${{ steps.sync.outputs.tag_version }}"
          file_pattern: custom_components/elkbledom/manifest.json
          push_options: --force
